[{"/home/malu/Desktop/interfaces/src/index.js":"1","/home/malu/Desktop/interfaces/src/reportWebVitals.js":"2","/home/malu/Desktop/interfaces/src/App.js":"3","/home/malu/Desktop/interfaces/src/components/Main.js":"4","/home/malu/Desktop/interfaces/src/components/Background.js":"5","/home/malu/Desktop/interfaces/src/components/Count.js":"6","/home/malu/Desktop/interfaces/src/components/Todolist.js":"7","/home/malu/Desktop/interfaces/src/components/Calendar.js":"8"},{"size":500,"mtime":1609455135747,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":1609455135747,"results":"11","hashOfConfig":"10"},{"size":394,"mtime":1609563430638,"results":"12","hashOfConfig":"10"},{"size":4543,"mtime":1609816772001,"results":"13","hashOfConfig":"10"},{"size":657,"mtime":1609566557104,"results":"14","hashOfConfig":"10"},{"size":6707,"mtime":1609816812658,"results":"15","hashOfConfig":"10"},{"size":6259,"mtime":1609566345104,"results":"16","hashOfConfig":"10"},{"size":2020,"mtime":1609816392015,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"14n6lhy",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"20"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"20"},"/home/malu/Desktop/interfaces/src/index.js",[],["38","39"],"/home/malu/Desktop/interfaces/src/reportWebVitals.js",[],"/home/malu/Desktop/interfaces/src/App.js",["40","41","42","43"],"\nimport './App.css';\n\nimport ReactDOM, { Component } from \"react\";\n\nimport Main from './components/Main';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\n\n\nfunction App() {\n  return (\n    <Router>\n      <switch>\n          <Route exact path=\"/\">\n           <Main></Main>\n          </Route>\n      </switch>\n     </Router>\n  );\n}\n\n\n\n\n\nexport default App;\n","/home/malu/Desktop/interfaces/src/components/Main.js",[],"/home/malu/Desktop/interfaces/src/components/Background.js",[],"/home/malu/Desktop/interfaces/src/components/Count.js",[],"/home/malu/Desktop/interfaces/src/components/Todolist.js",["44","45","46","47"],"import React, { Component } from \"react\";\n\nimport '../style/start.css';\n\nimport Typography from '@material-ui/core/Typography';\n\nimport TextField from '@material-ui/core/TextField';\n\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Avatar from '@material-ui/core/Avatar';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport Button from '@material-ui/core/Button';\n\nimport { Done,Add} from \"@material-ui/icons\";\nimport { StylesProvider } from \"@material-ui/core/styles\";\nimport AssignmentIcon from '@material-ui/icons/Assignment';\nimport IconButton from '@material-ui/core/IconButton';\n\n\nimport PropTypes from \"prop-types\";\n\n\nimport purple from \"@material-ui/core/colors/purple\";\n\nimport { green} from '@material-ui/core/colors';\n\nimport {ThemeProvider } from \"@material-ui/core\";\n\nimport { createMuiTheme} from '@material-ui/core/styles';\nimport { withStyles } from '@material-ui/core/styles';\n\n\nconst styles = theme => ({\n    root: {\n      display: 'flex',\n      '& > *': {\n        margin: theme.spacing(1),\n      }\n      \n    },\n    \n    pink: {\n        '&:hover': {\n            backgroundColor: \"white\",\n            color: '#FFF'\n        },\n      color: theme.palette.getContrastText(\"#f50057\"),\n      backgroundColor: \"white\",\n    },\n  });\n\n\n\n  const theme = createMuiTheme({\n    typography: {\n      fontFamily: [\n        '-apple-system',\n        'BlinkMacSystemFont',\n        '\"Segoe UI\"',\n        'Roboto',\n        '\"Helvetica Neue\"',\n        'Oxygen',\n        'sans-serif',\n        'Ubuntu',\n        'Cantarell',\n        'Fira Sans',\n      ].join(','),\n    },\n    palette: {\n      primary: {\n        main:  '#FFF',\n      },\n      secondary: {\n        main: green[500],\n      },\n    },\n\n  });\n\n\n  const styleshy = {\n\n    largeIcon: {\n      width: 60,\n      height: 60,\n    },\n  \n  };\n\n\n\nclass Todolist extends Component{\n    constructor(props){\n        super(props);\n        this.addItem = this.addItem.bind(this);\n        this.removeItem = this.removeItem.bind(this);\n        this.state = {\n            items:[],\n            text:\"\",\n        };\n\n    }\n    \n\n\n    addItem(e){\n        e.preventDefault();\n        if(this.state.text !== \"\"){\n\n            const newL = [this.state.text,...this.state.items]\n            this.setState({\n                items:newL,\n                text :\"\"\n            })\n     }\n    }\n\n    removeItem(e){\n       \n        let index = this.state.items.indexOf(e);\n        console.log(index);\n        const L = this.state.items;\n        L.splice(index,1);\n        this.setState({\n            text : this.state.text,\n            items:L\n        })\n       \n\n    }\n\n\n\n    handleChange = (event) =>{\n        this.setState({\n            [event.target.name]:event.target.value\n        })\n    }\n\n    _handleKeyDown = (e) => {\n        if (e.key === 'Enter' && this.state.text !== \"\") {\n            const newL = [this.state.text,...this.state.items]\n            this.setState({\n                items:newL,\n                text :\"\"\n            })\n        }\n      }\n\n\n    render(){\n\n        const {classes} = this.props;\n        return(\n\n           \n                <div id=\"capaInf\">\n                    <div id = \"textFill\">\n\n                    <ThemeProvider theme={theme}>\n                            <TextField   onKeyDown={this._handleKeyDown} \n                             style = {{width: 430}}\n                            name = \"text\"\n                            value = {this.state.text}\n                            onChange = {this.handleChange}\n\n                            id=\"outlined-basic\"\n                            label= {this.state.text === \"\" ?  \"Tarea\" : \"\"}\n                            variant=\"outlined\"\n                            InputLabelProps = {{\n                              style:{color:\" #DB524D\"},shrink: false }}\n\n                             InputProps={{\n                                    style:{background:\"white\", color:\"#DB524D\"}\n                                   \n                                }}\n                            />\n                            </ThemeProvider>\n\n                       \n                                <Button  \n                                style = {{marginLeft:3}} className = {classes.pink}  onClick = {this.addItem}>\n                                <Add  style={{ fontSize: 40 }} ></Add>\n                           \n                             </Button>\n                      \n                         \n\n\n\n                    </div>\n                    <div id = \"listItem\">\n                        <List disablePadding = {true}>\n                        {this.state.items.map(x =>\n                            <ListItem   key = {x.key} disableGutters = {true}>\n                            <ListItemAvatar>\n                            <Avatar className={classes.pink}>\n                             <AssignmentIcon   style={{ color: \"#DB524D\" }}/>\n\n                        </Avatar>\n                            </ListItemAvatar>\n                            <ListItemText \n                             disableTypography\n                        primary={<Typography  type=\"body2\" style={{  fontSize:\"large\", color: '#FFFFFF' }}>{x}</Typography>}\n                            />\n\n\n                            <ListItemSecondaryAction>\n\n                                <StylesProvider injectFirst>\n                            <IconButton     onClick = {() => this.removeItem(x)}>\n                                <Avatar className={classes.pink} >\n                            <DeleteIcon style={{ color: \"#DB524D\" }} ></DeleteIcon>\n    \n                            </Avatar>\n                            </IconButton>\n                            </StylesProvider>\n\n                            </ListItemSecondaryAction>\n                            </ListItem>,\n                        )}\n                        </List>\n                    </div>\n                  \n       \n        </div>\n        \n\n   \n\n   \n     \n\n\n        )\n    }\n}\n\n\nexport default withStyles(styles, { withTheme: true })(Todolist);\n","/home/malu/Desktop/interfaces/src/components/Calendar.js",["48","49"],"import { createMuiTheme, withStyles } from '@material-ui/core'\nimport FullCalendar from '@fullcalendar/react'\nimport dayGridPlugin from '@fullcalendar/daygrid'\nimport '../style/calendar.css';\nimport React, { Component } from 'react'\n\nconst styles = theme => ({\n    root: {\n      display: 'flex',\n      '& > *': {\n        margin: theme.spacing(1),\n      },\n    },\n    pink: {\n        '&:hover': {\n            backgroundColor: \"white\",\n            color: '#FFF'\n        },\n\n      color: theme.palette.getContrastText(\"#f50057\"),\n      backgroundColor: \"white\",\n    },\n  });\n\n  const theme = createMuiTheme({\n    overrides: {\n        MuiButton: {\n            label: {\n                color: \" #DB524D\"\n              },\n        },\n      },\n\n\n    typography: {\n      fontFamily: [\n        '-apple-system',\n        'BlinkMacSystemFont',\n        '\"Segoe UI\"',\n        'Roboto',\n        '\"Helvetica Neue\"',\n        'Oxygen',\n        'sans-serif',\n        'Ubuntu',\n        'Cantarell',\n        'Fira Sans',\n      ].join(','),\n    },\n  });\n\nclass Calendar extends Component {\n    constructor(props){\n        super(props);\n\n    }\n\n\n    render(){\n        return (\n        <div>\n            <div id=\"cal\">\n                <FullCalendar \n                aspectRatio=\"1.8\" \n                defaultView=\"dayGridMonth\" \n                plugins={[ dayGridPlugin ]} \n                themeSystem=\"theme\"\n                firstDay=\"1\"\n                locale=\"esLocale\"\n                events={[ //eventos dummy por el momento    \n                    {\n                      id: 'a',\n                      title: 'Pomodoro 1',\n                      start: '2021-01-01'\n                    },\n                    {\n                        id: 'b',\n                        title: 'Pomodoro 2',\n                        start: '2021-01-01'\n                    }\n                  ]}\n                />\n                \n            </div>\n        </div>\n    )}\n}\n\nexport default withStyles(styles, { withTheme: true })(Calendar);\n",{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","severity":1,"message":"55","line":4,"column":8,"nodeType":"56","messageId":"57","endLine":4,"endColumn":16},{"ruleId":"54","severity":1,"message":"58","line":4,"column":20,"nodeType":"56","messageId":"57","endLine":4,"endColumn":29},{"ruleId":"54","severity":1,"message":"59","line":9,"column":3,"nodeType":"56","messageId":"57","endLine":9,"endColumn":9},{"ruleId":"54","severity":1,"message":"60","line":11,"column":3,"nodeType":"56","messageId":"57","endLine":11,"endColumn":7},{"ruleId":"54","severity":1,"message":"61","line":18,"column":10,"nodeType":"56","messageId":"57","endLine":18,"endColumn":14},{"ruleId":"54","severity":1,"message":"62","line":24,"column":8,"nodeType":"56","messageId":"57","endLine":24,"endColumn":17},{"ruleId":"54","severity":1,"message":"63","line":27,"column":8,"nodeType":"56","messageId":"57","endLine":27,"endColumn":14},{"ruleId":"54","severity":1,"message":"64","line":85,"column":9,"nodeType":"56","messageId":"57","endLine":85,"endColumn":17},{"ruleId":"54","severity":1,"message":"65","line":25,"column":9,"nodeType":"56","messageId":"57","endLine":25,"endColumn":14},{"ruleId":"66","severity":1,"message":"67","line":52,"column":5,"nodeType":"68","messageId":"69","endLine":55,"endColumn":6},"no-native-reassign",["70"],"no-negated-in-lhs",["71"],"no-unused-vars","'ReactDOM' is defined but never used.","Identifier","unusedVar","'Component' is defined but never used.","'Switch' is defined but never used.","'Link' is defined but never used.","'Done' is defined but never used.","'PropTypes' is defined but never used.","'purple' is defined but never used.","'styleshy' is assigned a value but never used.","'theme' is assigned a value but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-global-assign","no-unsafe-negation"]