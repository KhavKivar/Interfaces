[{"/mnt/c/Users/morag/Desktop/IU/Interfaces/src/index.js":"1","/mnt/c/Users/morag/Desktop/IU/Interfaces/src/reportWebVitals.js":"2","/mnt/c/Users/morag/Desktop/IU/Interfaces/src/App.js":"3","/mnt/c/Users/morag/Desktop/IU/Interfaces/src/components/Main.js":"4","/mnt/c/Users/morag/Desktop/IU/Interfaces/src/components/Background.js":"5","/mnt/c/Users/morag/Desktop/IU/Interfaces/src/components/Count.js":"6","/mnt/c/Users/morag/Desktop/IU/Interfaces/src/components/Calendar.js":"7","/mnt/c/Users/morag/Desktop/IU/Interfaces/src/components/Todolist.js":"8"},{"size":517,"mtime":1609540925055,"results":"9","hashOfConfig":"10"},{"size":375,"mtime":1609540925056,"results":"11","hashOfConfig":"10"},{"size":1467,"mtime":1609906130427,"results":"12","hashOfConfig":"10"},{"size":4922,"mtime":1609898138371,"results":"13","hashOfConfig":"10"},{"size":682,"mtime":1609572805117,"results":"14","hashOfConfig":"10"},{"size":6959,"mtime":1609880207255,"results":"15","hashOfConfig":"10"},{"size":2044,"mtime":1609906345586,"results":"16","hashOfConfig":"10"},{"size":6503,"mtime":1609572805120,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"v7kdp6",{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"26"},"/mnt/c/Users/morag/Desktop/IU/Interfaces/src/index.js",[],"/mnt/c/Users/morag/Desktop/IU/Interfaces/src/reportWebVitals.js",[],"/mnt/c/Users/morag/Desktop/IU/Interfaces/src/App.js",["36","37","38"],"/mnt/c/Users/morag/Desktop/IU/Interfaces/src/components/Main.js",[],["39","40"],"/mnt/c/Users/morag/Desktop/IU/Interfaces/src/components/Background.js",[],"/mnt/c/Users/morag/Desktop/IU/Interfaces/src/components/Count.js",[],"/mnt/c/Users/morag/Desktop/IU/Interfaces/src/components/Calendar.js",["41","42"],"/mnt/c/Users/morag/Desktop/IU/Interfaces/src/components/Todolist.js",["43","44","45","46"],"import React, { Component } from \"react\";\r\n\r\nimport '../style/start.css';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport { Done,Add} from \"@material-ui/icons\";\r\nimport { StylesProvider } from \"@material-ui/core/styles\";\r\nimport AssignmentIcon from '@material-ui/icons/Assignment';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\n\r\nimport PropTypes from \"prop-types\";\r\n\r\n\r\nimport purple from \"@material-ui/core/colors/purple\";\r\n\r\nimport { green} from '@material-ui/core/colors';\r\n\r\nimport {ThemeProvider } from \"@material-ui/core\";\r\n\r\nimport { createMuiTheme} from '@material-ui/core/styles';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n      display: 'flex',\r\n      '& > *': {\r\n        margin: theme.spacing(1),\r\n      }\r\n      \r\n    },\r\n    \r\n    pink: {\r\n        '&:hover': {\r\n            backgroundColor: \"white\",\r\n            color: '#FFF'\r\n        },\r\n      color: theme.palette.getContrastText(\"#f50057\"),\r\n      backgroundColor: \"white\",\r\n    },\r\n  });\r\n\r\n\r\n\r\n  const theme = createMuiTheme({\r\n    typography: {\r\n      fontFamily: [\r\n        '-apple-system',\r\n        'BlinkMacSystemFont',\r\n        '\"Segoe UI\"',\r\n        'Roboto',\r\n        '\"Helvetica Neue\"',\r\n        'Oxygen',\r\n        'sans-serif',\r\n        'Ubuntu',\r\n        'Cantarell',\r\n        'Fira Sans',\r\n      ].join(','),\r\n    },\r\n    palette: {\r\n      primary: {\r\n        main:  '#FFF',\r\n      },\r\n      secondary: {\r\n        main: green[500],\r\n      },\r\n    },\r\n\r\n  });\r\n\r\n\r\n  const styleshy = {\r\n\r\n    largeIcon: {\r\n      width: 60,\r\n      height: 60,\r\n    },\r\n  \r\n  };\r\n\r\n\r\n\r\nclass Todolist extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.addItem = this.addItem.bind(this);\r\n        this.removeItem = this.removeItem.bind(this);\r\n        this.state = {\r\n            items:[],\r\n            text:\"\",\r\n        };\r\n\r\n    }\r\n    \r\n\r\n\r\n    addItem(e){\r\n        e.preventDefault();\r\n        if(this.state.text !== \"\"){\r\n\r\n            const newL = [this.state.text,...this.state.items]\r\n            this.setState({\r\n                items:newL,\r\n                text :\"\"\r\n            })\r\n     }\r\n    }\r\n\r\n    removeItem(e){\r\n       \r\n        let index = this.state.items.indexOf(e);\r\n        console.log(index);\r\n        const L = this.state.items;\r\n        L.splice(index,1);\r\n        this.setState({\r\n            text : this.state.text,\r\n            items:L\r\n        })\r\n       \r\n\r\n    }\r\n\r\n\r\n\r\n    handleChange = (event) =>{\r\n        this.setState({\r\n            [event.target.name]:event.target.value\r\n        })\r\n    }\r\n\r\n    _handleKeyDown = (e) => {\r\n        if (e.key === 'Enter' && this.state.text !== \"\") {\r\n            const newL = [this.state.text,...this.state.items]\r\n            this.setState({\r\n                items:newL,\r\n                text :\"\"\r\n            })\r\n        }\r\n      }\r\n\r\n\r\n    render(){\r\n\r\n        const {classes} = this.props;\r\n        return(\r\n\r\n           \r\n                <div id=\"capaInf\">\r\n                    <div id = \"textFill\">\r\n\r\n                    <ThemeProvider theme={theme}>\r\n                            <TextField   onKeyDown={this._handleKeyDown} \r\n                             style = {{width: 430}}\r\n                            name = \"text\"\r\n                            value = {this.state.text}\r\n                            onChange = {this.handleChange}\r\n\r\n                            id=\"outlined-basic\"\r\n                            label= {this.state.text === \"\" ?  \"Tarea\" : \"\"}\r\n                            variant=\"outlined\"\r\n                            InputLabelProps = {{\r\n                              style:{color:\" #DB524D\"},shrink: false }}\r\n\r\n                             InputProps={{\r\n                                    style:{background:\"white\", color:\"#DB524D\"}\r\n                                   \r\n                                }}\r\n                            />\r\n                            </ThemeProvider>\r\n\r\n                       \r\n                                <Button  \r\n                                style = {{marginLeft:3}} className = {classes.pink}  onClick = {this.addItem}>\r\n                                <Add  style={{ fontSize: 40 }} ></Add>\r\n                           \r\n                             </Button>\r\n                      \r\n                         \r\n\r\n\r\n\r\n                    </div>\r\n                    <div id = \"listItem\">\r\n                        <List disablePadding = {true}>\r\n                        {this.state.items.map(x =>\r\n                            <ListItem   key = {x.key} disableGutters = {true}>\r\n                            <ListItemAvatar>\r\n                            <Avatar className={classes.pink}>\r\n                             <AssignmentIcon   style={{ color: \"#DB524D\" }}/>\r\n\r\n                        </Avatar>\r\n                            </ListItemAvatar>\r\n                            <ListItemText \r\n                             disableTypography\r\n                        primary={<Typography  type=\"body2\" style={{  fontSize:\"large\", color: '#FFFFFF' }}>{x}</Typography>}\r\n                            />\r\n\r\n\r\n                            <ListItemSecondaryAction>\r\n\r\n                                <StylesProvider injectFirst>\r\n                            <IconButton     onClick = {() => this.removeItem(x)}>\r\n                                <Avatar className={classes.pink} >\r\n                            <DeleteIcon style={{ color: \"#DB524D\" }} ></DeleteIcon>\r\n    \r\n                            </Avatar>\r\n                            </IconButton>\r\n                            </StylesProvider>\r\n\r\n                            </ListItemSecondaryAction>\r\n                            </ListItem>,\r\n                        )}\r\n                        </List>\r\n                    </div>\r\n                  \r\n       \r\n        </div>\r\n        \r\n\r\n   \r\n\r\n   \r\n     \r\n\r\n\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default withStyles(styles, { withTheme: true })(Todolist);\r\n",{"ruleId":"47","severity":1,"message":"48","line":4,"column":8,"nodeType":"49","messageId":"50","endLine":4,"endColumn":16},{"ruleId":"47","severity":1,"message":"51","line":9,"column":3,"nodeType":"49","messageId":"50","endLine":9,"endColumn":9},{"ruleId":"47","severity":1,"message":"52","line":11,"column":3,"nodeType":"49","messageId":"50","endLine":11,"endColumn":7},{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","replacedBy":"56"},{"ruleId":"47","severity":1,"message":"57","line":25,"column":9,"nodeType":"49","messageId":"50","endLine":25,"endColumn":14},{"ruleId":"58","severity":1,"message":"59","line":52,"column":5,"nodeType":"60","messageId":"61","endLine":55,"endColumn":6},{"ruleId":"47","severity":1,"message":"62","line":18,"column":10,"nodeType":"49","messageId":"50","endLine":18,"endColumn":14},{"ruleId":"47","severity":1,"message":"63","line":24,"column":8,"nodeType":"49","messageId":"50","endLine":24,"endColumn":17},{"ruleId":"47","severity":1,"message":"64","line":27,"column":8,"nodeType":"49","messageId":"50","endLine":27,"endColumn":14},{"ruleId":"47","severity":1,"message":"65","line":85,"column":9,"nodeType":"49","messageId":"50","endLine":85,"endColumn":17},"no-unused-vars","'ReactDOM' is defined but never used.","Identifier","unusedVar","'Switch' is defined but never used.","'Link' is defined but never used.","no-native-reassign",["66"],"no-negated-in-lhs",["67"],"'theme' is assigned a value but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'Done' is defined but never used.","'PropTypes' is defined but never used.","'purple' is defined but never used.","'styleshy' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]