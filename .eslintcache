[{"/home/malu/Desktop/interfaces/src/index.js":"1","/home/malu/Desktop/interfaces/src/reportWebVitals.js":"2","/home/malu/Desktop/interfaces/src/App.js":"3","/home/malu/Desktop/interfaces/src/components/Main.js":"4","/home/malu/Desktop/interfaces/src/components/Background.js":"5","/home/malu/Desktop/interfaces/src/components/Count.js":"6","/home/malu/Desktop/interfaces/src/components/Todolist.js":"7","/home/malu/Desktop/interfaces/src/components/Calendar.js":"8"},{"size":500,"mtime":1609455135747,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":1609455135747,"results":"11","hashOfConfig":"10"},{"size":1535,"mtime":1610135953156,"results":"12","hashOfConfig":"10"},{"size":4883,"mtime":1610139287746,"results":"13","hashOfConfig":"10"},{"size":657,"mtime":1609566557104,"results":"14","hashOfConfig":"10"},{"size":7563,"mtime":1610139336805,"results":"15","hashOfConfig":"10"},{"size":6077,"mtime":1610139351581,"results":"16","hashOfConfig":"10"},{"size":1640,"mtime":1610136091699,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"14n6lhy",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"/home/malu/Desktop/interfaces/src/index.js",[],["36","37"],"/home/malu/Desktop/interfaces/src/reportWebVitals.js",[],"/home/malu/Desktop/interfaces/src/App.js",[],"/home/malu/Desktop/interfaces/src/components/Main.js",[],"/home/malu/Desktop/interfaces/src/components/Background.js",[],"/home/malu/Desktop/interfaces/src/components/Count.js",["38"],"import { Button } from \"@material-ui/core\";\nimport React, { Component } from \"react\";\n\nimport '../style/count.css';\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\n\nimport {ThemeProvider } from \"@material-ui/core\";\n\nimport { createMuiTheme} from '@material-ui/core/styles';\nimport { Check } from \"@material-ui/icons\";\n\n\n\nconst styles = theme => ({\n    root: {\n      display: 'flex',\n      '& > *': {\n        margin: theme.spacing(1),\n      },\n    },\n    pink: {\n        '&:hover': {\n            backgroundColor: \"white\",\n            color: '#FFF'\n        },\n\n      color: theme.palette.getContrastText(\"#f50057\"),\n      backgroundColor: \"white\",\n    },\n  });\n\n  const theme = createMuiTheme({\n    overrides: {\n        MuiButton: {\n            label: {\n                color: \" #DB524D\"\n              },\n        },\n      },\n\n\n    typography: {\n      fontFamily: [\n        '-apple-system',\n        'BlinkMacSystemFont',\n        '\"Segoe UI\"',\n        'Roboto',\n        '\"Helvetica Neue\"',\n        'Oxygen',\n        'sans-serif',\n        'Ubuntu',\n        'Cantarell',\n        'Fira Sans',\n      ].join(','),\n    },\n  });\n\n\n\n\nvar cont = 3;\nvar minutos25 = \"00\"\nvar seconds25 = \"03\"\nvar cont2 = 2;\nvar minutos5 = \"00\"\nvar seconds5 = \"02\"\n\nclass Count extends Component{\n    constructor(props){\n        super(props);\n        this.descanso = this.descanso.bind(this);\n        this.terminoDescanso=this.terminoDescanso.bind(this);\n\n        this.state = {\n            duracion:cont,\n            minutos:minutos25,\n            segundos:seconds25,\n            rest:false,\n            ciclo:0,\n            finish:false,\n            tareas:[],\n            tareasDone:[],\n            n:0,\n        }\n    }\n\n\n    tick(){\n      var timer = this.state.duracion, minutes, seconds;\n      if(timer >0){\n          timer = timer-1;\n          minutes = parseInt(timer / 60, 10);\n          seconds = parseInt(timer % 60, 10);\n\n        \n\n          minutes = minutes < 10 ? \"0\" + minutes : minutes;\n          seconds = seconds < 10 ? \"0\" + seconds : seconds;\n\n          var textContent = minutes + \":\"+seconds;\n          console.log(textContent);\n\n\n          this.setState({\n              duracion:timer,\n              minutos:minutes,\n              segundos:seconds  \n          })\n      }\n    }\n    terminoDescanso(){\n      if(this.state.ciclo <= this.state.n){\n        if(this.state.ciclo === (this.state.n - 1)){\n          let ultimo = this.state.n\n          this.setState({\n            finish:true,\n            ciclo: ultimo,\n          })\n        }else{\n          this.setState({\n            rest:false,\n            duracion:cont,\n            minutos:minutos25,\n            segundos:seconds25,\n            ciclo:this.state.ciclo +1\n          })\n        }\n     \n      }\n\n      let aux = this.state.tareas\n      let aux2 = this.state.tareasDone\n      aux2.push(aux.pop())\n      this.setState({\n        tareasDone: aux2, \n      })\n    }\n\n\n    descanso(){\n        this.setState({\n          rest:true,\n          duracion:cont2,\n          minutos:minutos5,\n          segundos:seconds5,\n        })\n  \n    }\n\n\n    componentDidMount() {\n      this.interval = setInterval(() => this.tick(), 1000);\n      const lista = this.props.tareas\n      const n = this.props.numTareas\n      this.setState({\n        tareas:lista,\n        n:n\n      })\n\n    }\n    componentWillUnmount() {\n      clearInterval(this.interval);\n    }\n    \n\n    render(){\n        \n        const {classes} = this.props;\n\n        let button;\n        button = \"\"\n        if(this.state.duracion === 0){\n           button =  \"ok\"\n        }\n        let text = \"Tiempo de concentracion\";\n        if(this.state.rest){\n          text = \"Tiempo de descanso\"\n        }\n\n\n\n        let code =  <div id=\"countdown\">\n                        <div style={{flexDirection: \"row\"}} id =\"cajas\">\n                          \n                        <Grid item xs={\"auto\"} zeroMinWidth={true}>\n                          <Grid container justify=\"center\" spacing={10} wrap=\"nowrap\">\n                            {this.state.tareasDone.map((value) => (\n                              <Grid key={value} item justify=\"center\" styles={{paddingRight:\"15px\", paddingLeft:\"15px\"}}>\n                                <div align=\"center\" style={{height:\"auto\"}}>\n                                  <div style={{top: 100, marginBottom: \"2px\", color:\"white\", fontSize:\"16px\"}}> {value}</div>\n                                  <Button style={{width: \"25%\", position:\"center\"} } className = {classes.pink} >\n                                    <Check style={{ fontSize: 40 }} ></Check>\n                                  </Button>\n                                </div>\n                              </Grid>\n                            ))}\n                          </Grid>\n                        </Grid>\n \n                        </div>\n                      <h2> {text}  </h2>\n                      <p>{this.state.minutos}:{this.state.segundos}</p> \n                        {button  !== \"\" && \n                            <ThemeProvider theme={theme}>\n                              <div id= \"btn\">\n\n<<<<<<< HEAD\n                                {this.state.rest ? <Button onClick = {this.terminoDescanso} fullWidth={true} style={{ fontSize: '15px' }}  variant=\"contained\"  className = {classes.pink} >\n                                    Comenzar siguiente tarea\n                                </Button>: \n                                <Button onClick = {this.descanso} fullWidth={true} style={{ fontSize: '15px' }}  variant=\"contained\"  className = {classes.pink} >\n                                Comenzar periodo de descanso\n=======\n                                {this.state.rest ? <Button onClick = {this.terminoDescanso} fullWidth={true} style={{ fontSize: '27px' }}  variant=\"contained\"  className = {classes.pink} >\n                                    Comenzar siguiente tarea\n                                </Button>: \n                                <Button onClick = {this.descanso} fullWidth={true} style={{ fontSize: '27px' }}  variant=\"contained\"  className = {classes.pink} >\n                                Comenzar descanso\n>>>>>>> 00309caaa23c21031934d5d12401cd17a14f9993\n                                </Button>\n                                }\n                              </div>\n                            </ThemeProvider>\n                        }\n                    </div>\n        \n        return(\n          <>\n          {this.state.finish ?\n          \n          <div id =\"countdown\">\n             <div style={{flexDirection:\"row\"}} id =\"cajas\">\n                <>\n                <Grid item xs={\"auto\"} zeroMinWidth={true}>\n                  <Grid container justify=\"center\" spacing={10} wrap=\"nowrap\">\n                    {this.state.tareasDone.map((value) => (\n                      <Grid key={value} item justify=\"center\" styles={{paddingRight:\"15px\", paddingLeft:\"15px\"}}>\n                        <div align=\"center\" style={{height:\"auto\"}}>\n                          <div style={{top: 100, marginBottom: \"2px\", color:\"white\", fontSize:\"16px\"}}> {value}</div>\n                          <Button style={{width: \"25%\", position:\"center\"} } className = {classes.pink} >\n                            <Check style={{ fontSize: 40 }} ></Check>\n                          </Button>\n                        </div>\n                      </Grid>\n                    ))}\n                  </Grid>\n                </Grid>\n                </>\n              </div>\n\n              <div id = \"end\">\n          <p style={{marginTop:\"60px\"}}>Felicidades!</p>\n          </div>\n              <div id = \"btn\">\n                <ThemeProvider theme={theme}>\n                <Button href=\"/\" fullWidth={true} style={{ fontSize: '23px',backgroundColor:\"white\"}}  variant=\"contained\"  className = {classes.pink} >\n                        Inicio\n                </Button>\n                </ThemeProvider>\n              </div>\n            </div>:code}\n          </>\n        )\n    }\n\n\n}\n\nexport default withStyles(styles, { withTheme: true })(Count);\n\n","/home/malu/Desktop/interfaces/src/components/Todolist.js",["39","40"],"/home/malu/Desktop/interfaces/src/components/Calendar.js",[],{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","severity":1,"message":"46","line":6,"column":8,"nodeType":"47","messageId":"48","endLine":6,"endColumn":13},{"ruleId":"45","severity":1,"message":"49","line":18,"column":10,"nodeType":"47","messageId":"48","endLine":18,"endColumn":14},{"ruleId":"45","severity":1,"message":"50","line":79,"column":9,"nodeType":"47","messageId":"48","endLine":79,"endColumn":17},"no-native-reassign",["51"],"no-negated-in-lhs",["52"],"no-unused-vars","'Paper' is defined but never used.","Identifier","unusedVar","'Done' is defined but never used.","'styleshy' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]