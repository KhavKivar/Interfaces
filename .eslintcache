[{"/home/noordic/Interfaces 2020-2/proyecto/Interfaces/src/index.js":"1","/home/noordic/Interfaces 2020-2/proyecto/Interfaces/src/App.js":"2","/home/noordic/Interfaces 2020-2/proyecto/Interfaces/src/reportWebVitals.js":"3","/home/noordic/Interfaces 2020-2/proyecto/Interfaces/src/components/Main.js":"4","/home/noordic/Interfaces 2020-2/proyecto/Interfaces/src/components/Background.js":"5","/home/noordic/Interfaces 2020-2/proyecto/Interfaces/src/components/Todolist.js":"6","/home/noordic/Interfaces 2020-2/proyecto/Interfaces/src/components/Calendar.js":"7","/home/noordic/Interfaces 2020-2/proyecto/Interfaces/src/components/Count.js":"8"},{"size":500,"mtime":1610051736853,"results":"9","hashOfConfig":"10"},{"size":1535,"mtime":1610051736849,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":1610051736853,"results":"12","hashOfConfig":"10"},{"size":4884,"mtime":1610051736849,"results":"13","hashOfConfig":"10"},{"size":657,"mtime":1610051736849,"results":"14","hashOfConfig":"10"},{"size":6165,"mtime":1610051736849,"results":"15","hashOfConfig":"10"},{"size":1560,"mtime":1610054588684,"results":"16","hashOfConfig":"10"},{"size":6770,"mtime":1610057336672,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"16fcjze",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/noordic/Interfaces 2020-2/proyecto/Interfaces/src/index.js",[],["36","37"],"/home/noordic/Interfaces 2020-2/proyecto/Interfaces/src/App.js",[],"/home/noordic/Interfaces 2020-2/proyecto/Interfaces/src/reportWebVitals.js",[],"/home/noordic/Interfaces 2020-2/proyecto/Interfaces/src/components/Main.js",[],"/home/noordic/Interfaces 2020-2/proyecto/Interfaces/src/components/Background.js",[],"/home/noordic/Interfaces 2020-2/proyecto/Interfaces/src/components/Todolist.js",["38","39"],"import React, { Component } from \"react\";\n\nimport '../style/start.css';\n\nimport Typography from '@material-ui/core/Typography';\n\nimport TextField from '@material-ui/core/TextField';\n\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Avatar from '@material-ui/core/Avatar';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport Button from '@material-ui/core/Button';\n\nimport { Done,Add} from \"@material-ui/icons\";\nimport { StylesProvider } from \"@material-ui/core/styles\";\nimport AssignmentIcon from '@material-ui/icons/Assignment';\nimport IconButton from '@material-ui/core/IconButton';\n\nimport { green} from '@material-ui/core/colors';\n\nimport {ThemeProvider } from \"@material-ui/core\";\n\nimport { createMuiTheme} from '@material-ui/core/styles';\nimport { withStyles } from '@material-ui/core/styles';\n\n\nconst styles = theme => ({\n    root: {\n      display: 'flex',\n      '& > *': {\n        margin: theme.spacing(1),\n      }\n      \n    },\n    \n    pink: {\n        '&:hover': {\n            backgroundColor: \"white\",\n            color: '#FFF'\n        },\n      color: theme.palette.getContrastText(\"#f50057\"),\n      backgroundColor: \"white\",\n    },\n  });\n\n\n\n  const theme = createMuiTheme({\n    typography: {\n      fontFamily: [\n        '-apple-system',\n        'BlinkMacSystemFont',\n        '\"Segoe UI\"',\n        'Roboto',\n        '\"Helvetica Neue\"',\n        'Oxygen',\n        'sans-serif',\n        'Ubuntu',\n        'Cantarell',\n        'Fira Sans',\n      ].join(','),\n    },\n    palette: {\n      primary: {\n        main:  '#FFF',\n      },\n      secondary: {\n        main: green[500],\n      },\n    },\n\n  });\n\n\n  const styleshy = {\n\n    largeIcon: {\n      width: 60,\n      height: 60,\n    },\n  \n  };\n\n\n\nclass Todolist extends Component{\n    constructor(props){\n        super(props);\n        this.addItem = this.addItem.bind(this);\n        this.removeItem = this.removeItem.bind(this);\n        this.state = {\n            items:[],\n            text:\"\",\n        };\n\n    }\n    \n\n\n    addItem(e){\n        e.preventDefault();\n        if(this.state.text !== \"\"){\n\n            const newL = [this.state.text,...this.state.items]\n            this.setState({\n                items:newL,\n                text :\"\"\n            })\n     }\n    }\n\n    removeItem(e){\n       \n        let index = this.state.items.indexOf(e);\n        console.log(index);\n        const L = this.state.items;\n        L.splice(index,1);\n        this.setState({\n            text : this.state.text,\n            items:L\n        })\n       \n\n    }\n\n\n\n    handleChange = (event) =>{\n        this.setState({\n            [event.target.name]:event.target.value\n        })\n    }\n\n    _handleKeyDown = (e) => {\n        if (e.key === 'Enter' && this.state.text !== \"\") {\n            const newL = [this.state.text,...this.state.items]\n            this.setState({\n                items:newL,\n                text :\"\"\n            })\n        }\n      }\n\n\n    render(){\n\n        const {classes} = this.props;\n        return(\n\n           \n                <div id=\"capaInf\">\n                    <div id = \"textFill\">\n\n                    <ThemeProvider theme={theme}>\n                            <TextField   onKeyDown={this._handleKeyDown} \n                             style = {{width: 430}}\n                            name = \"text\"\n                            value = {this.state.text}\n                            onChange = {this.handleChange}\n\n                            id=\"outlined-basic\"\n                            label= {this.state.text === \"\" ?  \"Tarea\" : \"\"}\n                            variant=\"outlined\"\n                            InputLabelProps = {{\n                              style:{color:\" #DB524D\"},shrink: false }}\n\n                             InputProps={{\n                                    style:{background:\"white\", color:\"#DB524D\"}\n                                   \n                                }}\n                            />\n                            </ThemeProvider>\n\n                       \n                                <Button  \n                                style = {{marginLeft:3}} className = {classes.pink}  onClick = {this.addItem}>\n                                <Add  style={{ fontSize: 40 }} ></Add>\n                           \n                             </Button>\n                      \n                         \n\n\n\n                    </div>\n                    <div id = \"listItem\">\n                        <List disablePadding = {true}>\n                        {this.state.items.map(x =>\n                            <ListItem   key = {x.key} disableGutters = {true}>\n                            <ListItemAvatar>\n                            <Avatar className={classes.pink}>\n                             <AssignmentIcon   style={{ color: \"#DB524D\" }}/>\n\n                        </Avatar>\n                            </ListItemAvatar>\n                            <ListItemText \n                             disableTypography\n                        primary={<Typography  type=\"body2\" style={{  fontSize:\"large\", color: '#FFFFFF' }}>{x}</Typography>}\n                            />\n\n\n                            <ListItemSecondaryAction>\n\n                                <StylesProvider injectFirst>\n                            <IconButton     onClick = {() => this.removeItem(x)}>\n                                <Avatar className={classes.pink} >\n                            <DeleteIcon style={{ color: \"#DB524D\" }} ></DeleteIcon>\n    \n                            </Avatar>\n                            </IconButton>\n                            </StylesProvider>\n\n                            </ListItemSecondaryAction>\n                            </ListItem>,\n                        )}\n                        </List>\n                    </div>\n                  \n       \n        </div>\n        \n\n   \n\n   \n     \n\n\n        )\n    }\n}\n\n\nexport default withStyles(styles, { withTheme: true })(Todolist);\n","/home/noordic/Interfaces 2020-2/proyecto/Interfaces/src/components/Calendar.js",[],"/home/noordic/Interfaces 2020-2/proyecto/Interfaces/src/components/Count.js",[],{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","severity":1,"message":"45","line":18,"column":10,"nodeType":"46","messageId":"47","endLine":18,"endColumn":14},{"ruleId":"44","severity":1,"message":"48","line":79,"column":9,"nodeType":"46","messageId":"47","endLine":79,"endColumn":17},"no-native-reassign",["49"],"no-negated-in-lhs",["50"],"no-unused-vars","'Done' is defined but never used.","Identifier","unusedVar","'styleshy' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]