[{"/home/noordic/Interfaces 2020-2/proyecto/Interfaces/src/index.js":"1","/home/noordic/Interfaces 2020-2/proyecto/Interfaces/src/App.js":"2","/home/noordic/Interfaces 2020-2/proyecto/Interfaces/src/reportWebVitals.js":"3","/home/noordic/Interfaces 2020-2/proyecto/Interfaces/src/components/Main.js":"4","/home/noordic/Interfaces 2020-2/proyecto/Interfaces/src/components/Background.js":"5","/home/noordic/Interfaces 2020-2/proyecto/Interfaces/src/components/Todolist.js":"6","/home/noordic/Interfaces 2020-2/proyecto/Interfaces/src/components/Count.js":"7","/home/noordic/Interfaces 2020-2/proyecto/Interfaces/src/components/Calendar.js":"8"},{"size":500,"mtime":1610137683491,"results":"9","hashOfConfig":"10"},{"size":1535,"mtime":1610137683487,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":1610137683491,"results":"12","hashOfConfig":"10"},{"size":4883,"mtime":1610137683487,"results":"13","hashOfConfig":"10"},{"size":657,"mtime":1610137683487,"results":"14","hashOfConfig":"10"},{"size":5553,"mtime":1610137683491,"results":"15","hashOfConfig":"10"},{"size":7499,"mtime":1610138020319,"results":"16","hashOfConfig":"10"},{"size":1640,"mtime":1610137683487,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"16fcjze",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"20"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"/home/noordic/Interfaces 2020-2/proyecto/Interfaces/src/index.js",[],["37","38"],"/home/noordic/Interfaces 2020-2/proyecto/Interfaces/src/App.js",[],"/home/noordic/Interfaces 2020-2/proyecto/Interfaces/src/reportWebVitals.js",[],"/home/noordic/Interfaces 2020-2/proyecto/Interfaces/src/components/Main.js",[],"/home/noordic/Interfaces 2020-2/proyecto/Interfaces/src/components/Background.js",[],"/home/noordic/Interfaces 2020-2/proyecto/Interfaces/src/components/Todolist.js",["39","40"],"import React, { Component } from \"react\";\n\nimport '../style/start.css';\n\nimport Typography from '@material-ui/core/Typography';\n\nimport TextField from '@material-ui/core/TextField';\n\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Avatar from '@material-ui/core/Avatar';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport Button from '@material-ui/core/Button';\n\nimport { Done,Add} from \"@material-ui/icons\";\nimport { StylesProvider } from \"@material-ui/core/styles\";\nimport AssignmentIcon from '@material-ui/icons/Assignment';\nimport IconButton from '@material-ui/core/IconButton';\n\nimport { green} from '@material-ui/core/colors';\n\nimport {ThemeProvider } from \"@material-ui/core\";\n\nimport { createMuiTheme} from '@material-ui/core/styles';\nimport { withStyles } from '@material-ui/core/styles';\n\n\nconst styles = theme => ({\n    root: {\n      display: 'flex',\n      '& > *': {\n        margin: theme.spacing(1),\n      }\n      \n    },\n    \n    pink: {\n        '&:hover': {\n            backgroundColor: \"white\",\n            color: '#FFF'\n        },\n      color: theme.palette.getContrastText(\"#f50057\"),\n      backgroundColor: \"white\",\n    },\n  });\n\n\n\n  const theme = createMuiTheme({\n    typography: {\n      fontFamily: [\n        '-apple-system',\n        'BlinkMacSystemFont',\n        '\"Segoe UI\"',\n        'Roboto',\n        '\"Helvetica Neue\"',\n        'Oxygen',\n        'sans-serif',\n        'Ubuntu',\n        'Cantarell',\n        'Fira Sans',\n      ].join(','),\n    },\n    palette: {\n      primary: {\n        main:  '#FFF',\n      },\n      secondary: {\n        main: green[500],\n      },\n    },\n\n  });\n\n\n  const styleshy = {\n\n    largeIcon: {\n      width: 60,\n      height: 60,\n    },\n  \n  };\n\n\n\nclass Todolist extends Component{\n    constructor(props){\n        super(props);\n        this.addItem = this.addItem.bind(this);\n        this.removeItem = this.removeItem.bind(this);\n        this.state = {\n            items:[],\n            text:\"\",\n        };\n\n    }\n    \n\n\n    addItem(e){\n        e.preventDefault();\n        if(this.state.text !== \"\"){\n\n            const newL = [this.state.text,...this.state.items]\n            this.setState({\n                items:newL,\n                text :\"\"\n            })\n     }\n    }\n\n    removeItem(e){\n       \n        let index = this.state.items.indexOf(e);\n        console.log(index);\n        const L = this.state.items;\n        L.splice(index,1);\n        this.setState({\n            text : this.state.text,\n            items:L\n        })\n\n    }\n\n\n\n    handleChange = (event) =>{\n        this.setState({\n            [event.target.name]:event.target.value\n        })\n    }\n\n    _handleKeyDown = (e) => {\n        if (e.key === 'Enter' && this.state.text !== \"\") {\n            const newL = [this.state.text,...this.state.items]\n            this.setState({\n                items:newL,\n                text :\"\"\n            })\n        }\n      }\n\n\n    render(){\n\n        const {classes} = this.props;\n        return(\n\n          <div id=\"capaInf\">\n            <div id = \"textFill\">\n\n              <ThemeProvider theme={theme}>\n                <TextField   onKeyDown={this._handleKeyDown} \n                style = {{width: 430}}\n                name = \"text\"\n                value = {this.state.text}\n                onChange = {this.handleChange}\n                inputProps={{ maxLength: 14 }}\n                id=\"outlined-basic\"\n                label= {this.state.text === \"\" ?  \"Tarea\" : \"\"}\n                variant=\"outlined\"\n                InputLabelProps = {{\n                  style:{color:\" #DB524D\"},shrink: false }}\n                InputProps={{\n                  style:{background:\"white\", color:\"#DB524D\"}}}\n                />\n              </ThemeProvider>\n              <Button style = {{marginLeft:3}} className = {classes.pink}  onClick = {this.addItem}>\n                <Add  style={{ fontSize: 40 }} ></Add>\n              </Button>\n            </div>\n                <div id = \"listItem\">\n                  <List disablePadding = {true}>\n                    {this.state.items.map(x =>\n                      <ListItem   key = {x.key} disableGutters = {true}>\n                      <ListItemAvatar>\n                        <Avatar className={classes.pink}>\n                          <AssignmentIcon   style={{ color: \"#DB524D\" }}/>\n                        </Avatar>\n                      </ListItemAvatar>\n                      <ListItemText \n                        disableTypography\n                        primary={<Typography  type=\"body2\" style={{  fontSize:\"large\", color: '#FFFFFF' }}>{x}</Typography>}\n                      />\n                      <ListItemSecondaryAction>\n                        <StylesProvider injectFirst>\n                          <IconButton onClick = {() => this.removeItem(x)}>\n                            <Avatar className={classes.pink} >\n                              <DeleteIcon style={{ color: \"#DB524D\" }} ></DeleteIcon>\n                            </Avatar>\n                          </IconButton>\n                        </StylesProvider>\n                      </ListItemSecondaryAction>\n                      </ListItem>,\n                  )}\n                  </List>\n                </div>\n          </div>\n        )\n    }\n}\n\n\nexport default withStyles(styles, { withTheme: true })(Todolist);\n","/home/noordic/Interfaces 2020-2/proyecto/Interfaces/src/components/Count.js",["41"],"import { Button } from \"@material-ui/core\";\nimport React, { Component } from \"react\";\n\nimport '../style/count.css';\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\n\nimport {ThemeProvider } from \"@material-ui/core\";\n\nimport { createMuiTheme} from '@material-ui/core/styles';\nimport { Check } from \"@material-ui/icons\";\n\n\n\nconst styles = theme => ({\n    root: {\n      display: 'flex',\n      '& > *': {\n        margin: theme.spacing(1),\n      },\n    },\n    pink: {\n        '&:hover': {\n            backgroundColor: \"white\",\n            color: '#FFF'\n        },\n\n      color: theme.palette.getContrastText(\"#f50057\"),\n      backgroundColor: \"white\",\n    },\n  });\n\n  const theme = createMuiTheme({\n    overrides: {\n        MuiButton: {\n            label: {\n                color: \" #DB524D\"\n              },\n        },\n      },\n\n\n    typography: {\n      fontFamily: [\n        '-apple-system',\n        'BlinkMacSystemFont',\n        '\"Segoe UI\"',\n        'Roboto',\n        '\"Helvetica Neue\"',\n        'Oxygen',\n        'sans-serif',\n        'Ubuntu',\n        'Cantarell',\n        'Fira Sans',\n      ].join(','),\n    },\n  });\n\n\n\n\nvar cont = 3;\nvar minutos25 = \"00\"\nvar seconds25 = \"03\"\nvar cont2 = 2;\nvar minutos5 = \"00\"\nvar seconds5 = \"02\"\n\nclass Count extends Component{\n    constructor(props){\n        super(props);\n        this.descanso = this.descanso.bind(this);\n        this.terminoDescanso=this.terminoDescanso.bind(this);\n\n        this.state = {\n            duracion:cont,\n            minutos:minutos25,\n            segundos:seconds25,\n            rest:false,\n            ciclo:0,\n            finish:false,\n            tareas:[],\n            tareasDone:[],\n            n:0,\n        }\n    }\n\n\n    tick(){\n      var timer = this.state.duracion, minutes, seconds;\n      if(timer >0){\n          timer = timer-1;\n          minutes = parseInt(timer / 60, 10);\n          seconds = parseInt(timer % 60, 10);\n\n        \n\n          minutes = minutes < 10 ? \"0\" + minutes : minutes;\n          seconds = seconds < 10 ? \"0\" + seconds : seconds;\n\n          var textContent = minutes + \":\"+seconds;\n          console.log(textContent);\n\n\n          this.setState({\n              duracion:timer,\n              minutos:minutes,\n              segundos:seconds  \n          })\n      }\n    }\n    terminoDescanso(){\n      if(this.state.ciclo <= this.state.n){\n        if(this.state.ciclo === (this.state.n - 1)){\n          let ultimo = this.state.n\n          this.setState({\n            finish:true,\n            ciclo: ultimo,\n          })\n        }else{\n          this.setState({\n            rest:false,\n            duracion:cont,\n            minutos:minutos25,\n            segundos:seconds25,\n            ciclo:this.state.ciclo +1\n          })\n        }\n     \n      }\n\n      let aux = this.state.tareas\n      let aux2 = this.state.tareasDone\n      aux2.push(aux.pop())\n      this.setState({\n        tareasDone: aux2, \n      })\n    }\n\n\n    descanso(){\n        this.setState({\n          rest:true,\n          duracion:cont2,\n          minutos:minutos5,\n          segundos:seconds5,\n        })\n  \n    }\n\n\n    componentDidMount() {\n      this.interval = setInterval(() => this.tick(), 1000);\n      const lista = this.props.tareas\n      const n = this.props.numTareas\n      this.setState({\n        tareas:lista,\n        n:n\n      })\n\n    }\n    componentWillUnmount() {\n      clearInterval(this.interval);\n    }\n    \n\n    render(){\n        \n        const {classes} = this.props;\n\n        let button;\n        button = \"\"\n        if(this.state.duracion === 0){\n           button =  \"ok\"\n        }\n        let text = \"Tiempo de concentracion\";\n        if(this.state.rest){\n          text = \"Tiempo de descanso\"\n        }\n\n\n\n        let code =  <div id=\"countdown\">\n                        <div style={{flexDirection: \"row\"}} id =\"cajas\">\n                          \n                        <Grid item xs={\"auto\"} zeroMinWidth={true}>\n                          <Grid container justify=\"center\" spacing={10} wrap=\"nowrap\">\n                            {this.state.tareasDone.map((value) => (\n                              <Grid key={value} item justify=\"center\" styles={{paddingRight:\"15px\", paddingLeft:\"15px\"}}>\n                                <div align=\"center\" style={{height:\"auto\"}}>\n                                  <div style={{top: 100, marginBottom: \"2px\", color:\"white\", fontSize:\"16px\"}}> {value}</div>\n                                  <Button style={{width: \"25%\", position:\"center\"} } className = {classes.pink} >\n                                    <Check style={{ fontSize: 40 }} ></Check>\n                                  </Button>\n                                </div>\n                              </Grid>\n                            ))}\n                          </Grid>\n                        </Grid>\n \n                        </div>\n                      <h2> {text}  </h2>\n                      <p>{this.state.minutos}:{this.state.segundos}</p> \n                        {button  !== \"\" && \n                            <ThemeProvider theme={theme}>\n                              <div id= \"btn\">\n\n                                {this.state.rest ? <Button onClick = {this.terminoDescanso} fullWidth={true} style={{ fontSize: '27px' }}  variant=\"contained\"  className = {classes.pink} >\n                                    Comenzar siguiente tarea\n                                </Button>: \n                                <Button onClick = {this.descanso} fullWidth={true} style={{ fontSize: '27px' }}  variant=\"contained\"  className = {classes.pink} >\n                                Comenzar descanso\n                                </Button>\n                                }\n                              </div>\n                            </ThemeProvider>\n                        }\n                    </div>\n        \n        return(\n          <>\n          {this.state.finish ?\n          \n          <div id =\"countdown\">\n             <div style={{flexDirection:\"row\"}} id =\"cajas\">\n                <>\n                <Grid item xs={\"auto\"} zeroMinWidth={true}>\n                  <Grid container justify=\"center\" spacing={10} wrap=\"nowrap\">\n                    {this.state.tareasDone.map((value) => (\n                      <Grid key={value} item justify=\"center\" styles={{paddingRight:\"15px\", paddingLeft:\"15px\"}}>\n                        <div align=\"center\" style={{height:\"auto\"}}>\n                          <div style={{top: 100, marginBottom: \"2px\", color:\"white\", fontSize:\"16px\"}}> {value}</div>\n                          <Button style={{width: \"25%\", position:\"center\"} } className = {classes.pink} >\n                            <Check style={{ fontSize: 40 }} ></Check>\n                          </Button>\n                        </div>\n                      </Grid>\n                    ))}\n                  </Grid>\n                </Grid>\n                </>\n              </div>\n          <p style={{marginTop:\"60px\"}}>Gracias!</p>\n              <div id = \"btn\">\n                <ThemeProvider theme={theme}>\n                <Button href=\"/\" fullWidth={true} style={{ fontSize: '27px',backgroundColor:\"white\"}}  variant=\"contained\"  className = {classes.pink} >\n                        Inicio\n                </Button>\n                </ThemeProvider>\n              </div>\n            </div>:code}\n          </>\n        )\n    }\n\n\n}\n\nexport default withStyles(styles, { withTheme: true })(Count);\n\n","/home/noordic/Interfaces 2020-2/proyecto/Interfaces/src/components/Calendar.js",[],{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","severity":1,"message":"47","line":18,"column":10,"nodeType":"48","messageId":"49","endLine":18,"endColumn":14},{"ruleId":"46","severity":1,"message":"50","line":79,"column":9,"nodeType":"48","messageId":"49","endLine":79,"endColumn":17},{"ruleId":"46","severity":1,"message":"51","line":6,"column":8,"nodeType":"48","messageId":"49","endLine":6,"endColumn":13},"no-native-reassign",["52"],"no-negated-in-lhs",["53"],"no-unused-vars","'Done' is defined but never used.","Identifier","unusedVar","'styleshy' is assigned a value but never used.","'Paper' is defined but never used.","no-global-assign","no-unsafe-negation"]